services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    restart: always
    networks:
      - cesi-network

  nginx:
    image: nginx:latest #Nous allons chercher la derni√®re version de nginx existante
    container_name: nginx #Nous nommons le container
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/nginx.conf #Affectation du fichier de config personnalis√© | first part is local : second part is inside the container
    ports:
      - "8080:8080" # Nous exposerons sur le port 8080
    networks:
      - cesi-network
    depends_on:
     - auth-service # means you have to run it before
     - gateway


  # üõ°Ô∏è AUTH SERVICE
  auth-service:
    build: ./auth-service
    container_name: auth-service
    ports:
      - "5001:5001"
    environment:
      - PORT=5001
      - ACCESS_JWT_KEY="defaultkey"
      - TOKEN_LIFETIME="1h"
    networks:
      - cesi-network

  #  API GATEWAY
  gateway:
    build: ./gateway
    container_name: gateway
    ports:
      - "8000:8000"
    networks:
      - cesi-network
    depends_on:
      - order-service
      - auth-service
    environment:
      - PORT=8000
      - ACCESS_JWT_KEY="access_jwt_key"
    

  # üë§ USER SERVICE
  user-service:
    build: ./services/user-service
    container_name: user-service
    environment:
      - PORT=5002
      - DATABASE_URL=postgres://user:password@postgres:5432/cesi_users
    depends_on:
      - postgres
    networks:
      - cesi-network

  # üßæ ORDER SERVICE
  order-service:
    build: ./services/order-service
    container_name: order-service
    environment:
      - PORT=5003
      - MONGO_URI=mongodb+srv://dhiarabaaoui:Dhia2001@cluster0.s1mgwkm.mongodb.net/CesiETS?retryWrites=true&w=majority&appName=Cluster0
    networks:
      - cesi-network
    depends_on:
      - mongo
      - postgres

  # üçΩÔ∏è MENU SERVICE
  menu-service:
    build: ./services/menu-service
    container_name: menu-service
    environment:
      - PORT=5004
      - DATABASE_URL=postgres://user:password@postgres:5432/cesi_menus
    depends_on:
      - postgres
    networks:
      - cesi-network

  # üí≥ PAYMENT SERVICE
  payment-service:
    build: ./services/payment-service
    container_name: payment-service
    environment:
      - PORT=5005
      - DATABASE_URL=postgres://user:password@postgres:5432/cesi_payments
    depends_on:
      - postgres
    networks:
      - cesi-network

  # üöö DELIVERY SERVICE
  delivery-service:
    build: ./services/delivery-service
    container_name: delivery-service
    environment:
      - PORT=5006
      - DATABASE_URL=postgres://user:password@postgres:5432/cesi_deliveries
    depends_on:
      - postgres
    networks:
      - cesi-network

  # üìä ANALYTICS SERVICE
  analytics-service:
    build: ./services/analytics-service
    container_name: analytics-service
    environment:
      - PORT=5007
      - DATABASE_URL=postgres://user:password@postgres:5432/cesi_analytics
    depends_on:
      - postgres
    networks:
      - cesi-network

  # üß© COMPONENT SERVICE
  component-service:
    build: ./services/component-service
    container_name: component-service
    environment:
      - PORT=5008
      - DATABASE_URL=postgres://user:password@postgres:5432/cesi_components
    depends_on:
      - postgres
    networks:
      - cesi-network

  # üóÉÔ∏è POSTGRESQL
  postgres:
    image: postgres:17
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: cesi_global
    volumes:
      - ./docker/postgres-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - cesi-network

  # üóÑÔ∏è MONGODB
  mongo:
    image: mongo:6
    container_name: mongo
    ports:
      - "27017:27017"
    networks:
      - cesi-network


networks:
  cesi-network:
    driver: bridge