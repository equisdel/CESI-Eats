# nginx receives the requests as it is the proxy between client and main server 

events {
    worker_connections 1024;
}

# nginx is a proxy inside gateway, if token redirects to server (who will validate), if no token redirects to auth-service's right endpoint

http {
    server {
        
        listen 8080;            # make sure the compose.yml maps the port correctly
        server_name localhost;  # listen on localhost port 8080

        #root /usr/share/nginx/html;

        location /authenticate {    # we want to configure the routes as we did in the gateway | location == route

            #internal;   # only NGINX can access this route, not the client directly

            #proxy_pass_request_body off;
            #proxy_set_header Content-Length "";
            #proxy_set_header X-Original-URI $request_uri;

            proxy_pass http://auth-service:5001/authenticate;   # proxy_pass: keyword - "send this request to this endpoint"
        }

        location /login {
            proxy_pass http://auth-service:5001/login;          # auth-service: alias | "if you get a request to the login endpoint, you will send it to our container"
        }

        location /register {
            proxy_pass http://auth-service:5001/register;
        }

       # location / {    # all other requests
            #auth_request /authenticate;  # internal subrequest to validate the user's token
            #proxy_pass http://gateway:3000/;  # main-service: alias | "if you get a request to the main service, you will send it to our container"
       # }

    }
}